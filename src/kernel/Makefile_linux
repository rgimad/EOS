TARGET_ELF=kernel.elf

TARGET_DIR=../../bin/kernel/

ISODIR=../../isodir/

INCLUDE_DIR=../../include/

AS = "/opt/i686-elf-tools-linux/bin/i686-elf-as"
CC = "/opt/i686-elf-tools-linux/bin/i686-elf-gcc"
#BASH = ubuntu1804 run

LDFLAGS=-T linker.ld -ffreestanding -nostdlib -lgcc
ifdef DEBUG
	CCFLAGS=-std=gnu99 -g -ffreestanding -Wall -Wextra -I $(INCLUDE_DIR)
else
	CCFLAGS=-std=gnu99 -ffreestanding -Wall -Wextra -I $(INCLUDE_DIR)
endif

OBJ=boot.o kernel.o ../libk/string.o ../libk/math.o ../libk/list.o ksh.o gdt.o gdt_asm.o idt.o idt_asm.o tss.o tss_asm.o tty.o graphics/vesafb.o graphics/vgafnt.o cpu_detect.o io/ports.o io/qemu_log.o interrupts.o interrupts_asm.o devices/keyboard.o devices/timer.o devices/mouse.o mm/phys_memory.o paging.o mm/virt_memory.o mm/kheap.o mm/uheap.o fs/vfs.o fs/initrd.o syscall.o pm/elf.o pm/thread.o pm/process.o pm/scheduler.o pm/context_switch_asm.o gui/consolewindow.o

all: $(TARGET_ELF)

$(TARGET_ELF): $(OBJ)
	$(CC) $(LDFLAGS) -o $(TARGET_DIR)$(TARGET_ELF) $(OBJ)

%.o: %.c
	$(CC) $(CCFLAGS) -c -o $@ $<

%.o: %.s
	$(AS) -o $@ $<

run:
	qemu-system-i386 -kernel $(TARGET_DIR)kernel.elf -M pc-i440fx-3.1

build-run: $(TARGET_ELF)
	qemu-system-i386 -kernel $(TARGET_DIR)/kernel.elf -M pc-i440fx-3.1

check-multiboot: $(TARGET_ELF)
	grub-file --is-x86-multiboot $(TARGET_DIR)$(TARGET_ELF)

build-iso: check-multiboot
	rm -rf $(ISODIR)
	mkdir -p $(ISODIR)boot
	make -C ../../apps -f Makefile_apps_linux
	cp -r ../../bin/apps ../../initrd/
	cd ../../initrd; tar -cf ../isodir/boot/initrd.tar *; cd -
	mkdir -p $(ISODIR)boot/grub
	cp $(TARGET_DIR)kernel.elf $(ISODIR)boot/kernel.elf
	cp ../../grub/grub.cfg $(ISODIR)boot/grub/grub.cfg
	grub-mkrescue -o ../../EOS.iso $(ISODIR)

build-iso-run: build-iso
	rm -rf EOS_qemu_serial.log
	qemu-system-i386 -cdrom ../../EOS.iso -monitor stdio -serial file:EOS_qemu_serial.log

run-iso:
	rm -rf EOS_qemu_serial.log
	qemu-system-i386 -cdrom ../../EOS.iso -monitor stdio -serial file:EOS_qemu_serial.log

run-iso-debug:
	rm -rf EOS_qemu_serial.log
	qemu-system-i386 -s -S -cdrom ../../EOS.iso -monitor stdio -serial file:EOS_qemu_serial.log & gdb $(TARGET_DIR)$(TARGET_ELF) -ex "target remote localhost:1234" -tui

build-iso-run-debug: build-iso run-iso-debug

clean-initrd-apps:
	rm -rf ../../initrd/apps/*

clean:
	rm -rf $(ISODIR)
	rm -rf ../../EOS.iso
	rm -rf *.o
	rm -rf io/*.o
	rm -rf devices/*.o
	rm -rf mm/*.o
	rm -rf graphics/*.o
	rm -rf fs/*.o
	rm -rf pm/*.o
	rm -rf ../libk/*.o
	rm -rf gui/*.o
	rm -rf $(TARGET_DIR)kernel.elf
	rm -rf $(TARGET_DIR)../apps/*
	make -C ../../apps -f Makefile_apps_linux clean
